CREATE DATABASE sports_management_database_system;


CREATE TABLE sports(
    Sid INT NOT NULL,
    Sname VARCHAR(30),
    Category VARCHAR(35),
    PRIMARY KEY(Sid)
);

INSERT INTO sports(Sid, Sname, Category)
VALUES
(1, 'Football', 'Men'),
(2, 'Cricket', 'Men'),
(3, 'Basketball', 'Men'),
(4, 'Cricket', 'Women'),
(5, 'Throwball', 'Women'),
(6, 'Volleyball', 'Men'),
(7, 'Kabaddi', 'Men'),
(8, 'Badminton', 'Men'),
(9, 'Badminton', 'Women'),
(10, 'Table Tennis', 'Women');

INSERT INTO sports VALUES
(1, 'Football', 'Men'),
(2, 'Cricket', 'Men'),
(3, 'Basketball', 'Men'),
(4, 'Cricket', 'Women'),
(5, 'Throwball', 'Women'),
(6, 'Volleyball', 'Men'),
(7, 'Kabaddi', 'Men'),
(8, 'Badminton', 'Men'),
(9, 'Badminton', 'Women'),
(10, 'Table Tennis', 'Women');

LOAD DATA INFILE "sports.csv"
INTO TABLE sports 
COLUMNS TERMINATED BY ',' 
OPTIONALLY ENCLOSED BY " " 
ESCAPED BY " " 
LINES TERMINATED BY '\n'
IGNORE 1 LINES;
------------------------------------------------

CREATE TABLE coach( 
    Cid INT NOT NULL, 
    Cname VARCHAR(20), 
    Ph_no VARCHAR(10), 
    Address VARCHAR(30), 
    Specialized_in VARCHAR(50), 
    PRIMARY KEY(Cid) 
);

INSERT INTO coach(Cid, Cname, Ph_no, Address, Specialized_in)
VALUES
(2001, 'Alex','9123456781', '#23,2nd main, Bengaluru','Football'),
(2103, 'James','8111456781', '#20,5th main, Delhi','Volleyball'),
(2501, 'Noah', '7123456178','#11,1st main, Mumbai','Badminton'),
(3001, 'Dia', '9123111111','#21,4th main, Bengaluru','Throwball'),
(2344, 'Rose', '9111115678','#38, 3rd main, Bengaluru','Table Tennis'),
(2676, 'Virat', '9000000000','#3,3rd main, Bengaluru','Cricket'),
(2777, 'Sita', '8000000001','#1, 1st main, Delhi','Cricket'),
(2308, 'Alia', '7171777777', '#51,8th main, Mumbai','Volleyball'),
(2199, 'Avni','6345673456', '#17, 17th main, Mumbai', 'Basketball'),
(2710, 'Jack', '8936474646', '#8,5th main, Delhi', 'Pro Kabaddi');
------------------------------------------------------------------------------

CREATE TABLE league(
    Lid INT NOT NULL,
    Lname VARCHAR(50),
    PRIMARY KEY(Lid)
);

INSERT INTO league(Lid, Lname)
VALUES
(10090, 'ICC Men T20 World Cup'),
(11078, 'Pro Kabaddi'),
(12090, 'FIFA'),
(13078, 'All India Women Cricket Tournament'),
(14090, 'IPL'),
(11075, 'All India Volleyball Tournament'),
(14096, 'NBA'),
(19098, 'Badminton League'),
(17770, 'ICC Women T20 World Cup'),
(19978, 'Table Tennis League');
---------------------------------------------------------

CREATE TABLE matches(
    Mid INT NOT NULL,
    Team1 VARCHAR(50),
    Team2 VARCHAR(50),
    Refree VARCHAR(50),
    Location VARCHAR(55),
    Lid INT,
    PRIMARY KEY(Mid),
    FOREIGN KEY(Lid) REFERENCES league(Lid) ON DELETE CASCADE
);



INSERT INTO matches(Mid, Team1, Team2, Refree, Location, Lid)
VALUES
(91, 'Fire', 'Water','Albert','Bengaluru',19098),
(92, 'Alpha', 'Beta','Raj','Mumbai',11078),
(93, 'The Lions','Winners','Roy','Delhi',11075),
(94, 'Tigress','Sparkle','Mina','Bengaluru',13078),
(95, 'Power','Pride','Larry', 'New York',19978),
(96, 'Bravehearts','Royal','Liam','London',19098),
(97, 'India','Pakistan','Rahul','Delhi', 10090),
(98, 'RCB','MI','Lucky','Bengaluru',14090),
(99, 'Royal Family','Rainbow','Ria','Bengaluru',19098),
(100, 'Bengaluru bulls','U Mumba','Ron','Bengaluru',11078);

-----------------------------------------

CREATE TABLE teams(
    Tid INT NOT NULL,
    Tname VARCHAR(50),
    Captain VARCHAR(35),
    No_of_players INT,
    Sid INT,
    Cid INT,
    Mid INT,
    Lid INT,
    PRIMARY KEY(Tid),
    FOREIGN KEY(Sid) REFERENCES sports(Sid) ON DELETE CASCADE,
    FOREIGN KEY(Cid) REFERENCES coach(Cid) ON DELETE CASCADE,
    FOREIGN KEY(Mid) REFERENCES matches(Mid) ON DELETE CASCADE,
    FOREIGN KEY(Lid) REFERENCES league(Lid) ON DELETE CASCADE
);

INSERT INTO teams(Tid, Tname, Captain, No_of_players, Sid, Cid, Mid, Lid)
VALUES
(591, 'Fire', 'Riya',4,9,2501,91,19098),
(592, 'Alpha', 'Avi',12,7,2710,92,11078),
(593, 'The Lions','Alvin',9,6,2103,93,11075),
(594, 'Beta','Sandy',11,4,2777,94,13078),
(595, 'Power','Katy',2,10,2344,95,19978),
(596, 'Bravehearts','Harry',4,8,2501,96,19098),
(597, 'India','Virat',11,2,2676,97,10090),
(598, 'RCB','Virat',11,2,2676,98,14090),
(599, 'Royal Family','Tina',4,8,2501,99,19098),
(600, 'Bengaluru bulls','Rohit',12,7,2710,100,11078);

--------------------------------------------------------------

CREATE TABLE players(
    Pid INT NOT NULL,
    Fname VARCHAR(20),
    Lname VARCHAR(20),
    Dob DATE,
    Age INT,
    Ph_no VARCHAR(10),
    Address VARCHAR(30),
    Cid INT,
    Tid INT,
    PRIMARY KEY(Pid),
    FOREIGN KEY(Cid) REFERENCES coach(Cid) ON DELETE CASCADE,
    FOREIGN KEY(Tid) REFERENCES teams(Tid) ON DELETE CASCADE
);

INSERT INTO players(Pid, Fname, Lname, Dob, Age, Ph_no, Address, Cid, Tid)
VALUES
(61, 'Alvin','Anderson','1999-07-01',23,'7878787878','#67, 5th main, Bengaluru',2103,593),
(62, 'Avi','Raj','2002-11-20',20,'9676758586','#31, 8th main, Mumbai',2710,592),
(63, 'Rani','Riven','2000-01-11',22,'9000000787','#90, 9th main, Delhi',2344,595),
(64, 'Lucky','Lander','1995-11-01',27,'7090769980','#8, 8th main, Bengaluru',2501,591),
(65, 'Roger','Ran','2002-09-09',20,'9786912121','#77, 7th main, Mumbai',2103,593),
(66, 'David','Dan','1990-08-01',32,'9888888880','#1, 1st main, Bengaluru',2676,598), 
(67, 'Harry','Rick','2000-03-05',22,'8777798080','#8, 5th main, Bengaluru',2501,591),
(68, 'Poppy','Pick','2002-07-05',20,'9111454600','#245, 9th main, Delhi',2344,595),
(69, 'Lia','Lerry','2001-04-08',21,'9000055558','#2, 2nd main, Mumbai',2344,595),
(70, 'Katy', 'Jerry','1998-06-19',24,'9115648790','#3, 3rd main, Mumbai',2344,595);

--------------------------------------------------------------------------------------------------------------------------

Join queries

1) Retrieve Player Id and Player name along with their Coach id and coach name

SELECT players.Pid as "Player Id", players.Fname "Player Name", coach.Cid as "Coach Id", coach.Cname as "Coach name"
FROM players
INNER JOIN coach ON players.Cid = coach.Cid;


2) Retrieve MATCH id and location of each Matches corresponding to its league Id and league name

SELECT matches.Mid as "Match Id",matches.Location, league.Lid as "League Id", league.Lname as "League Name"
from matches
NATURAL JOIN league;


3) Retrive Team Id, Team Name of a team along with the number of matches each team is playing

SELECT teams.Tid as "Team Id", teams.Tname as "Team Name", count(Mid) as "Number of matches"
FROM teams 
NATURAL JOIN matches group by teams.tid;


4) Retrive Team Id, Team Name, Maximum number of players in a team and current number of players in a team

SELECT teams.Tid as "Team Id", teams.Tname "Team Name", teams.No_of_players as "Maximum number of players", count(Pid) as "Current number of players in a team"
FROM teams 
LEFT OUTER JOIN players ON teams.Tid = players.Tid group by teams.tid;




--------------------------------------------------------------------------------------------------------------------------

Aggregate funtions

1) Retrive the most number of players and Least number of players in a team

SELECT max(No_of_players) as "Most number of players", min(No_of_players) as "Least number of players" from teams ;


2) Retrive the average age of players

SELECT AVG(Age) as "Average Age of players" from players;


3) Retrive the number of coaches who live in Bengaluru

SELECT COUNT(*)
FROM coach
WHERE Address like "%Bengaluru";


4) Retrive the number of different sports available for men and women and order by ascending order

SELECT Category, COUNT(*) 
from sports 
group by Category 
ORDER BY COUNT(*) ASC;

--------------------------------------------------------------------------------------------------------------------------

SET operations

1) Retrieve Player Name with Team Id of all players including the captain.

SELECT Fname as "Name",Tid as "Team Id" from players
UNION
SELECT Captain,Tid from Teams;


2) Retrieve Team Id, Team name, Player Id, Firstname and Lastname of players who play for teams with Tid 591, 595

Select t.Tid as "Team Id", Tname as "Team Name", Pid as "Player Id", Fname as "First name", Lname as "Last name" 
FROM players as p, teams as t
WHERE p.Tid = t.Tid AND p.Tid = 591

UNION

Select t.Tid, Tname, Pid, Fname, Lname 
FROM players as p, teams as t
WHERE p.Tid = t.Tid AND p.Tid = 595;

3)Retrive the Name of player which is same as the coach name

SELECT DISTINCT Fname FROM players  
WHERE Fname IN (SELECT Cname FROM coach);  

4) Retrive Team Id and Firstame of Players who play for a team but is not a captain

SELECT Fname,Tid from players
EXCEPT
SELECT Captain,Tid from teams;



------------------------------------------------------


SELECT Cid as "ID", Cname as "Name" from coach where Address = "Delhi"
UNION
SELECT Cid, Fname from players where Address = "Delhi";

SELECT Cid as "ID", Cname as "Name" from coach where Address = "Delhi"
WHERE Cid as "ID", Cname as "Name" from coach where Address = "Delhi" IN (SELECT Pid, Fname from players where Address = "Delhi");

SELECT Lid, Lname from league
UNION 
SLECT Mid, Location from matches

SELECT Tid as "Team Id", Tname as "Team Name", max(No_of_players) as "Most number of players" from teams
UNION
SELECT Tid as "Team Id", Tname as "Team Name", min(No_of_players) as "Least number of players" from teams;

--------------------------------------------------------------------------------------------------------------------

FUNCTION

Calculate the age of the player(We can check this with the age we entered manually)


DELIMITER $$
CREATE FUNCTION age_of_players(date1 date) 
RETURNS INT
DETERMINISTIC 
 BEGIN
    DECLARE date2 DATE;
      SELECT current_date()into date2;
	  RETURN year(date2)-year(date1);
END; $$
DELIMITER ;

-----------
enter this to call the function
Select Pid, Fname, Lname, age_of_players(Dob) as 'Age' from players;

----------------------------------------------------------------------------------------------------------

PROCEDURE TO INSERT NEW SPORT

DELIMITER $$
CREATE PROCEDURE insert_new_sport(IN new_Sid INT, IN new_Sname VARCHAR(255), IN new_Category VARCHAR(255))
BEGIN
    INSERT INTO sports(Sid, Sname, Category)VALUES(new_Sid, new_Sname, new_Category) ;
END $$
DELIMITER ;

--------------

CALL insert_new_sport("11", "High jump", "Women");



------------------------------------------------------------------------------------------------------------------------------


TRIGGER

Create a trigger to show an error message if the age of a new player while inserting is below 18 years

DELIMITER $$
CREATE TRIGGER age_restriction BEFORE INSERT ON
    players FOR EACH ROW
BEGIN
    DECLARE error_msg VARCHAR(255) ;  

    IF new.Age < 18 THEN
    	    SET error_msg = ('The player should be 18 or above 18 years old') ; 
         SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = error_msg ;
    END IF ;

END $$
DELIMITER ;


-------------
Valid input

INSERT INTO players(Pid, Fname, Lname, Dob, Age, Ph_no, Address, Cid, Tid)
VALUES
(72, 'Alex','Bush','1998-07-01',24,'7878787000','#37, 9th main, Bengaluru',2103,593);

------------
Invalid input

INSERT INTO players(Pid, Fname, Lname, Dob, Age, Ph_no, Address, Cid, Tid)
VALUES
(73, 'George','Ray','2008-08-01',14,'7878787000','#17, 8th main, Bengaluru',2103,593);


---------------------------------------------------------------------------------------------------------------------------
CURSOR

Create a cursor to creates a Name list of all players

DELIMITER $$
CREATE PROCEDURE create_name_list (
	INOUT nameList varchar(255)
)
BEGIN
	DECLARE finished INTEGER DEFAULT 0;
	DECLARE name varchar(255) DEFAULT "";

	-- declare cursor for player name
	DEClARE curName
		CURSOR FOR 
			SELECT Fname FROM players;

	-- declare NOT FOUND handler
	DECLARE CONTINUE HANDLER 
        FOR NOT FOUND SET finished = 1;

	OPEN curName;

	getName: LOOP
		FETCH curName INTO name;
		IF finished = 1 THEN 
			LEAVE getName;
		END IF;
		-- build name list
		SET nameList = CONCAT(name,";",nameList);
	END LOOP getName;
	CLOSE curName;

END$$
DELIMITER ;

---------------
call the cursor

SET @nameList = ""; 
CALL create_name_List(@nameList); 
SELECT @nameList;


------------------------------------------------------------------------------------------------------------






